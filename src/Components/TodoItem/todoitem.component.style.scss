@use "../../Assets/Styles/variables" as *;

.item-wrapper {
  border-bottom: 1px solid $l_vLightGrayBlue;
  display: flex;
  align-items: center;
  height: 50px;
  width: 100%;
  justify-content: space-between;
  animation: fadeInAnimation ease 0.3s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;

  &.dark {
    border-bottom: 1px solid $d_darkGrayishBlue;
  }

  .item-text {
    display: flex;
    flex: 1 0 0;
    align-items: center;
    margin-top: 5px;

    &.dark {
      color: $d_lightGrayBlueH;
    }
  }

  .item-checkbox {
    display: flex;
    align-items: center;
    flex: 1 0 0;

    /* basic checkbox styling */

    .item-check {
      width: 20px;
      height: 20px;
      margin: 0 20px;
      vertical-align: middle;
      -webkit-appearance: none;
      background: none;
      border: 0;
      outline: 0;
      flex-grow: 0;
      border-radius: 50%;
      background-color: inherit;
      transition: background 300ms;
      cursor: pointer;
      animation: fadeInAnimation ease 0.3s;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;

      &.dark::before {
        content: "";
        color: transparent;
        display: block;
        width: inherit;
        height: inherit;
        border-radius: inherit;
        border: 0;
        background-color: transparent;
        background-size: contain;
        box-shadow: inset 0 0 0 1px $d_darkGrayishBlue;
      }

      &::before {
        content: "";
        color: transparent;
        display: block;
        width: inherit;
        height: inherit;
        border-radius: inherit;
        border: 0;
        background-color: transparent;
        background-size: contain;
        box-shadow: inset 0 0 0 1px $l_vLightGrayBlue;
      }

      /* pseudo check styling */

      &:hover + label {
        cursor: pointer;
      }

      /* checked state with label */

      &:checked + label {
        color: $l_vLightGrayBlue;
        text-decoration: line-through;

        &.dark {
          color: $d_darkGrayBlue;
        }
      }

      &:checked::before {
        box-shadow: none;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E %3Cpath d='M15.88 8.29L10 14.17l-1.88-1.88a.996.996 0 1 0-1.41 1.41l2.59 2.59c.39.39 1.02.39 1.41 0L17.3 9.7a.996.996 0 0 0 0-1.41c-.39-.39-1.03-.39-1.42 0z' fill='%23fff'/%3E %3C/svg%3E"),
          linear-gradient(
            to bottom right,
            hsl(192, 100%, 67%),
            hsl(280, 87%, 65%)
          );
        background-repeat: no-repeat;
        background-position: center center;
      }

      /* IE */

      &::-ms-check {
        content: "";
        color: transparent;
        display: block;
        width: inherit;
        height: inherit;
        border-radius: inherit;
        border: 0;
        background-color: transparent;
        background-size: contain;
        box-shadow: inset 0 0 0 1px #ccd3d8;
      }

      &:checked::-ms-check {
        box-shadow: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E %3Cpath d='M15.88 8.29L10 14.17l-1.88-1.88a.996.996 0 1 0-1.41 1.41l2.59 2.59c.39.39 1.02.39 1.41 0L17.3 9.7a.996.996 0 0 0 0-1.41c-.39-.39-1.03-.39-1.42 0z' fill='%23fff'/%3E %3C/svg%3E");
      }
    }

    .btn-delete {
      margin-right: 20px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;

      img {
        width: 15px;
      }
    }
  }
}
